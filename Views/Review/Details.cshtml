@model Coursework.Models.Review
@inject MarkdownToHtmlService _markdownToHtmlService
@inject IHtmlLocalizer<SharedResource> _sharedLocalizer
@inject IHtmlLocalizer<GroupResource> _groupLocalizer

@{
    ViewData["Title"] = "Review";
}

<link rel="stylesheet" href="~/lib/bootstrap-star-rating/themes/krajee-svg/theme.min.js" />

<div class="border rounded-2 p-2">
    <div class="col-md-12 pb-3 mb-4 border-bottom">
        <div class="d-flex">
            <a asp-controller="Account" asp-action="Profile"
               asp-route-id="@Model.Author.Id" class="text-decoration-none text-black">
                <img class="mb-0 me-2 rounded-circle" src="@Model.Author.AvatarUrl" width="32" height="32" alt="Avatar">
                <span>@Model.Author.UserName</span>
            </a>

            <div class="d-flex col-md-10 align-items-center justify-content-center text-center text-wrap text-break ms-2">
                <h2>@Model.Title</h2>
                <span class="badge bg-secondary align-middle me-2">@_groupLocalizer[Model.Group.Name]</span>
            </div>
            
        </div>
        
        <div>
            @_sharedLocalizer["AuthorRating"]: @Model.AuthorRating
        </div>
    </div>

    <div class="col-md-12">
        @Html.Raw(_markdownToHtmlService.ConvertMarkdownToHtml(Model.Text))
    </div>
</div>

@if (Model.Images != null && Model.Images.Any())
{
    <div class="col-md-12 mt-2">
        <h3>@_sharedLocalizer["Images"]:</h3>

        <div id="carouselPictures" class="carousel carousel-dark slide col-12 col-md-6" data-bs-ride="carousel">
            <div class="carousel-inner">
                @{
                    bool isFirst = true;
                    foreach (var image in Model.Images)
                    {
                        <div class="carousel-item @(isFirst ? "active" : "")">
                            <img src="@image.Url" class="w-100" style="object-fit: contain; height: 400px" alt="...">
                        </div>
                        isFirst = false;
                    }
                }
            </div>
            @if(Model.Images.Count > 1)
            {
                <button class="carousel-control-prev" type="button" data-bs-target="#carouselPictures" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">@_sharedLocalizer["Previous"]</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#carouselPictures" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">@_sharedLocalizer["Next"]</span>
                </button>
            }
        </div>
    </div>
}

@if (User.Identity.IsAuthenticated)
{
    <br />
    <label for="ratingInput" class="d-block">@_sharedLocalizer["RatingThisReview"] </label>
    <input id="ratingInput" name="input-name" type="number" class="rating" style="width: 0" data-size="sm"
           data-show-clear="false" min="0" max="5" value="@ViewBag.Rating" step="1" data-show-caption="true"
           data-keyboard-enabled="false" data-container-class="d-inline" />
    <br />
}

<div class="mt-2">
    @if (User.Identity.IsAuthenticated)
    {

        @if (!ViewBag.IsLiked)
        {
            <button id="likeBtn" class="btn btn-success ms-1">@_sharedLocalizer["Like"]</button>
        }
        else
        {
            <button id="likeBtn" class="btn btn-danger ms-1">@_sharedLocalizer["Dislike"]</button>
        }
    }
    <label id="likes" class="form-label ms-1">@_sharedLocalizer["LikesCount"]:  @ViewBag.Likes</label>
</div>

@if (User.Identity.IsAuthenticated)
{
    <div class="row mt-2">
        <div id="commentContainer" class="col">
            <span id="commentErrorSpan"></span>
            <textarea id="commentText" class="form-control" rows="3" style="resize: none"
                      placeholder="@_sharedLocalizer["CommentPlaceholder"]"></textarea>
            <button id="btnPostComment" class="btn btn-sm btn-primary pull-right mt-1" type="submit">
                <i class="fa fa-pencil fa-fw"></i> @_sharedLocalizer["PostComment"]
            </button>
            @foreach (var comment in Model.Comments)
            {
                await Html.RenderPartialAsync("CommentPartial", comment);
            }
        </div>
    </div>
}
   

@section Scripts
{
    <script>
        $(document).ready(function() {
            $("#ratingInput").rating().on("rating:change",
                function(event, value, caption) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("SetRating", "Review")',
                        data: {
                            reviewId: @Model.Id,
                            rating: value
                        }
                    });
                });
            $("#likeBtn").click(function() {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("ToggleLike", "Review")',
                    data: {
                        reviewId: '@Model.Id'
                    },
                    success: function(data) {
                        $("#likeBtn").toggleClass('btn-danger');
                        $("#likeBtn").toggleClass('btn-success');
                        if ($("#likeBtn").hasClass('btn-success'))
                            $("#likeBtn").html('@_sharedLocalizer["Like"]');
                        else
                            $("#likeBtn").html('@_sharedLocalizer["Dislike"]');
                        $("#likes").html("@_sharedLocalizer["LikesCount"]:" + data);
                    }
                });
            });
            $("#btnPostComment").click(function() {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("PostComment", "Review")',
                    data: {
                        reviewId: '@Model.Id',
                        text: $("#commentText").val()
                    },
                    success: function(data) {
                        $("#commentContainer").append(data);
                    },
                    error: function(data) {
                        $("#commentErrorSpan").val(data);
                    }
                });
            });
        });
    </script>
}

